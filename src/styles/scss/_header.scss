@use 'sass:map';
@use './colors' as colors;
@use './typo/variables' as typo;
@use './mixins/breakpoint' as breakpoint;
@use './mixins/hover-focus' as hover-focus;

.header {
  background: {
    color: colors.$black;
  }
  position: fixed;
  top: 0;
  width: 100%;
  padding: {
    block: {
      start: 1rem;
      end: 1rem;
    }
  }
  .container {
    flex: {
      direction: column;
    }
    align-items: start;
    @include breakpoint.large-breakpoint {
      flex: {
        direction: row;
      }
      align-items: center;
      justify-content: space-between;
    }
  }
  &::after {
    content: '';
    background: {
      color: grey;
    }
  }
}

.logo {
  max: {
    width: 7.5rem;
    height: 3.125rem;
  }
  font: {
    size: clamp(24px, 2vw, 36px);
    weight: map.get(typo.$font-weights, 'regular');
  }
  padding: {
    block: {
      start: 1rem;
      end: 1rem;
    }
  }
  line-height: 1;
  color: red;
  span {
    transition: color 0.33s ease-in-out;
  }
  span:first-child {
    color: transparent;
    -webkit-text-stroke: 1px colors.$primary;
  }
  span:last-child {
    color: transparent;
    -webkit-text-stroke: 1px colors.$secondary;
    position: absolute;
    top: 7px;
  }
}

.trigger {
  position: absolute;
  top: 1.6rem;
  right: 1rem;
  &::before,
  &::after {
    content: '';
    height: 3px;
    width: 30px;
    display: block;
    margin: {
      block: {
        start: 6px;
        end: 6px;
      }
      inline: {
        start: auto;
        end: auto;
      }
    }
    background: {
      color: colors.$white-inactive;
    }
    transition: {
      property: color, background-color, transform;
      duration: 0.5s;
      timing-function: ease-in-out;
    }
  }
  &::before {
    transform: translateY(0) rotate(0);
    transition: transform 1.25s cubic-bezier(0.5, 0.2, 0.2, 1),
      background-color 1.25s ease;
  }
  &::after {
    font-size: 16px;
    transform: translateY(0) rotate(0);
    transition: transform 1.25s cubic-bezier(0.5, 0.2, 0.2, 1),
      background-color 1.25s ease;
  }
  @include hover-focus.hover-focus-state {
    &::after,
    &::before {
      background: {
        color: colors.$white;
      }
    }
  }
  @include breakpoint.large-breakpoint {
    display: none;
  }
}
